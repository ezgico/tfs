{
  "tasks": [
    {
      "environment": {},
      "displayName": "Check for Pipeline Tags",
      "alwaysRun": false,
      "continueOnError": false,
      "condition": "succeeded()",
      "enabled": true,
      "timeoutInMinutes": 0,
      "inputs": {
        "targetType": "inline",
        "filePath": "",
        "arguments": "",
        "script": "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n\nfunction Invoke-ADRequest {\n  param(\n    [String]\n    $Endpoint,\n    [String]\n    $Method,\n    [String]\n    $ApiVersion = \"5.0\",\n    $Body,\n    $Params = \"\"\n  )\n\n  $uri = \"https://next-tfs/HeadOffice/$($Endpoint)?api-version=$($ApiVersion)$($Params)\"\n\n  # It is obviously usually a very bad idea to store credentials in a script, but this allows this script to be portable. This PAT token has read-only access to just build and release\n  # pipeline objects.\n  # PS if you've come here because this script is causing you issues, this token would expire 18/11/2021.\n\n  $AzureDevOpsPAT = \"nj7enxgfifn7hhhcbl7cexqwgfcp4yewpj7mwytdz3wyculjpu4q\"\n  $AzureDevOpsAuthenicationHeader = @{Authorization = 'Basic ' + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(\":$($AzureDevOpsPAT)\")) }\n\n  $invRestMethParams = @{\n    Uri         = $uri\n    Method      = $Method\n    ContentType = 'application/json'\n    Body        = $Body\n    Headers     = $AzureDevOpsAuthenicationHeader\n  }\n  $Result = Invoke-RestMethod @invRestMethParams\n\n  return $result\n}\n\n\n$deploymentInputs = (Invoke-ADRequest -Endpoint \"$($ENV:BUILD_PROJECTNAME)/_apis/release/definitions/$($ENV:RELEASE_DEFINITIONID)\" -Method \"GET\").environments.deployPhases.deploymentInput\n\nforeach($input in $deploymentInputs) {\n  if($input.tags.length -eq 0) {\n    Write-Host \"##vso[task.logissue type=error]There are tags missing on this release pipeline, to avoid deploying to all servers in the pool, this release will be cancelled.\"\n    exit 1\n  }\n}",
        "errorActionPreference": "stop",
        "failOnStderr": "false",
        "ignoreLASTEXITCODE": "false",
        "pwsh": "false",
        "workingDirectory": ""
      },
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "2.*",
        "definitionType": "task"
      }
    },
    {
      "environment": {},
      "displayName": "Create Website and App Pool",
      "alwaysRun": false,
      "continueOnError": false,
      "condition": "succeeded()",
      "enabled": false,
      "timeoutInMinutes": 0,
      "inputs": {
        "EnableIIS": "false",
        "IISDeploymentType": "IISWebsite",
        "ActionIISWebsite": "CreateOrUpdateWebsite",
        "ActionIISApplicationPool": "CreateOrUpdateAppPool",
        "StartStopWebsiteName": "",
        "WebsiteName": "$(WebsiteName)",
        "WebsitePhysicalPath": "$(WebsitePhysicalPath)",
        "WebsitePhysicalPathAuth": "WebsiteUserPassThrough",
        "WebsiteAuthUserName": "",
        "WebsiteAuthUserPassword": "",
        "AddBinding": "false",
        "Protocol": "http",
        "IPAddress": "All Unassigned",
        "Port": "80",
        "ServerNameIndication": "false",
        "HostNameWithOutSNI": "",
        "HostNameWithHttp": "",
        "HostNameWithSNI": "",
        "SSLCertThumbPrint": "",
        "Bindings": "{\"bindings\":[{\"protocol\":\"http\",\"ipAddress\":\"$(IPAddress)\",\"port\":\"$(Port)\",\"hostname\":\"$(Hostname)\",\"sslThumbprint\":\"\",\"sniFlag\":false}]}",
        "CreateOrUpdateAppPoolForWebsite": "false",
        "ConfigureAuthenticationForWebsite": "false",
        "AppPoolNameForWebsite": "$(WebsiteName)",
        "DotNetVersionForWebsite": "v4.0",
        "PipeLineModeForWebsite": "Integrated",
        "AnonymousAuthenticationForWebsite": "false",
        "BasicAuthenticationForWebsite": "false",
        "WindowsAuthenticationForWebsite": "true",
        "ParentWebsiteNameForVD": "",
        "VirtualPathForVD": "",
        "PhysicalPathForVD": "%SystemDrive%\\inetpub\\wwwroot",
        "VDPhysicalPathAuth": "VDUserPassThrough",
        "VDAuthUserName": "",
        "VDAuthUserPassword": "",
        "ParentWebsiteNameForApplication": "",
        "VirtualPathForApplication": "",
        "PhysicalPathForApplication": "%SystemDrive%\\inetpub\\wwwroot",
        "ApplicationPhysicalPathAuth": "ApplicationUserPassThrough",
        "ApplicationAuthUserName": "",
        "ApplicationAuthUserPassword": "",
        "CreateOrUpdateAppPoolForApplication": "false",
        "AppPoolNameForApplication": "",
        "DotNetVersionForApplication": "v4.0",
        "PipeLineModeForApplication": "Integrated",
        "AppPoolIdentityForApplication": "ApplicationPoolIdentity",
        "AppPoolUsernameForApplication": "",
        "AppPoolPasswordForApplication": "",
        "AppPoolName": "$(AppPoolName)",
        "DotNetVersion": "v4.0",
        "PipeLineMode": "Integrated",
        "AppPoolIdentity": "ApplicationPoolIdentity",
        "StartStopRecycleAppPoolName": "",
        "AppCmdCommands": ""
      },
      "task": {
        "id": "1b2aec60-dc49-11e6-9b76-63056e018cac",
        "versionSpec": "0.*",
        "definitionType": "task"
      }
    },
    {
      "environment": {},
      "displayName": "Create Virtual Application",
      "alwaysRun": false,
      "continueOnError": false,
      "condition": "succeeded()",
      "enabled": true,
      "timeoutInMinutes": 0,
      "inputs": {
        "EnableIIS": "false",
        "IISDeploymentType": "IISWebApplication",
        "ActionIISWebsite": "CreateOrUpdateWebsite",
        "ActionIISApplicationPool": "CreateOrUpdateAppPool",
        "StartStopWebsiteName": "",
        "WebsiteName": "$(WebsiteName)",
        "WebsitePhysicalPath": "%SystemDrive%\\inetpub\\wwwroot",
        "WebsitePhysicalPathAuth": "WebsiteUserPassThrough",
        "WebsiteAuthUserName": "",
        "WebsiteAuthUserPassword": "",
        "AddBinding": "false",
        "Protocol": "http",
        "IPAddress": "All Unassigned",
        "Port": "80",
        "ServerNameIndication": "false",
        "HostNameWithOutSNI": "",
        "HostNameWithHttp": "",
        "HostNameWithSNI": "",
        "SSLCertThumbPrint": "",
        "Bindings": "",
        "CreateOrUpdateAppPoolForWebsite": "false",
        "ConfigureAuthenticationForWebsite": "false",
        "AppPoolNameForWebsite": "",
        "DotNetVersionForWebsite": "v4.0",
        "PipeLineModeForWebsite": "Integrated",
        "AppPoolIdentityForWebsite": "ApplicationPoolIdentity",
        "AppPoolUsernameForWebsite": "",
        "AppPoolPasswordForWebsite": "",
        "AnonymousAuthenticationForWebsite": "false",
        "BasicAuthenticationForWebsite": "false",
        "WindowsAuthenticationForWebsite": "true",
        "ParentWebsiteNameForVD": "",
        "VirtualPathForVD": "",
        "PhysicalPathForVD": "%SystemDrive%\\inetpub\\wwwroot",
        "VDPhysicalPathAuth": "VDUserPassThrough",
        "VDAuthUserName": "",
        "VDAuthUserPassword": "",
        "ParentWebsiteNameForApplication": "$(WebsiteName)",
        "VirtualPathForApplication": "/$(VirtualApplication)",
        "PhysicalPathForApplication": "$(WebsitePhysicalPath)\\$(VirtualApplication)",
        "ApplicationPhysicalPathAuth": "ApplicationUserPassThrough",
        "ApplicationAuthUserName": "",
        "ApplicationAuthUserPassword": "",
        "CreateOrUpdateAppPoolForApplication": "true",
        "AppPoolNameForApplication": "$(AppPoolName)",
        "DotNetVersionForApplication": "v4.0",
        "PipeLineModeForApplication": "Integrated",
        "AppPoolIdentityForApplication": "ApplicationPoolIdentity",
        "AppPoolUsernameForApplication": "",
        "AppPoolPasswordForApplication": "",
        "AppPoolName": "$(AppPoolName)",
        "DotNetVersion": "v4.0",
        "PipeLineMode": "Integrated",
        "AppPoolIdentity": "ApplicationPoolIdentity",
        "AppPoolUsername": "$(AppPoolUsername)",
        "AppPoolPassword": "$(AppPoolPassword)",
        "StartStopRecycleAppPoolName": "",
        "AppCmdCommands": "unlock config /section:anonymousAuthentication\nunlock config /section:windowsAuthentication\n\nset config \"$(WebsiteName)/$(VirtualApplication)\" -section:system.webServer/security/authentication/anonymousAuthentication /enabled:\"True\" /userName:\"IUSR\" /commit:apphost\nset config \"$(WebsiteName)/$(VirtualApplication)\" -section:system.webServer/security/authentication/windowsAuthentication /enabled:\"False\" /commit:apphost\n\nset apppool \"$(AppPoolName)\" -processModel.maxProcesses:$(WorkerProcesses)"
      },
      "task": {
        "id": "1b2aec60-dc49-11e6-9b76-63056e018cac",
        "versionSpec": "0.*",
        "definitionType": "task"
      }
    },
    {
      "displayName": "Extract Web Package",
      "alwaysRun": false,
      "continueOnError": false,
      "condition": "succeeded()",
      "enabled": true,
      "timeoutInMinutes": 0,
      "inputs": {
        "targetType": "inline",
        "script": "$ZipPath = Get-ChildItem -Recurse \"$($env:WebPackage)\"\n\n$ZipPath | Expand-Archive -Force\n\n$AppName1 = $env:WebPackage.replace(\"**\\\",\"\").split('/')[$env:WebPackage.replace(\"**\\\",\"\").split('/').length -1].split('.')\n$DirName = $AppName1[0..($AppName1.length-2)] -join '.'\n\nWrite-Host \"##vso[task.setvariable variable=DirName]$DirName\"\nWrite-Host \"##vso[task.setvariable variable=ZipPath]$ZipPath\"",
        "errorActionPreference": "stop",
        "failOnStderr": "false",
        "ignoreLASTEXITCODE": "false",
        "pwsh": "false"
      },
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "2.*",
        "definitionType": "task"
      }
    },
    {
      "displayName": "Apply transforms *.$(Environment).config => *.config",
      "alwaysRun": false,
      "continueOnError": false,
      "condition": "succeeded()",
      "enabled": true,
      "timeoutInMinutes": 0,
      "inputs": {
        "workingFolder": "$(DirName)",
        "transforms": "*.$(Environment).config => *.config"
      },
      "task": {
        "id": "98012758-c053-475d-9d6a-fd0773c39e09",
        "versionSpec": "3.*",
        "definitionType": "task"
      }
    },
    {
      "displayName": "Remove Original Web Package",
      "alwaysRun": false,
      "continueOnError": false,
      "condition": "succeeded()",
      "enabled": true,
      "timeoutInMinutes": 0,
      "inputs": {
        "targetType": "inline",
        "script": "Get-ChildItem -Recurse Web.config | cat\n\n# parameters.xml seems to be created with msbuild during build, causes tokens to be replaced during msdeploy, get rid of it.\n# $ParamFile = Get-ChildItem -Recurse parameters.xml\n# Set-Content -Path $ParamFile -Value \"<parameters></parameters>\"\n\n\n$env:ZipPath | Remove-Item\n\n",
        "errorActionPreference": "stop",
        "failOnStderr": "false",
        "ignoreLASTEXITCODE": "false",
        "pwsh": "false"
      },
      "task": {
        "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
        "versionSpec": "2.*",
        "definitionType": "task"
      }
    },
    {
      "displayName": "Archive Web Package",
      "alwaysRun": false,
      "continueOnError": false,
      "condition": "succeeded()",
      "enabled": true,
      "timeoutInMinutes": 0,
      "inputs": {
        "rootFolderOrFile": "$(DirName)",
        "includeRootFolder": "false",
        "archiveType": "zip",
        "tarCompression": "gz",
        "archiveFile": "$(ZipPath)",
        "replaceExistingArchive": "false",
        "verbose": "true",
        "quiet": "false"
      },
      "task": {
        "id": "d8b84976-e99a-4b86-b885-4849694435b0",
        "versionSpec": "2.*",
        "definitionType": "task"
      }
    },
    {
      "environment": {},
      "displayName": "Deploy",
      "alwaysRun": false,
      "continueOnError": false,
      "condition": "succeeded()",
      "enabled": true,
      "timeoutInMinutes": 0,
      "inputs": {
        "WebSiteName": "$(WebsiteName)",
        "VirtualApplication": "$(VirtualApplication)",
        "Package": "$(WebPackage)",
        "SetParametersFile": "",
        "RemoveAdditionalFilesFlag": "false",
        "ExcludeFilesFromAppDataFlag": "false",
        "TakeAppOfflineFlag": "true",
        "AdditionalArguments": "",
        "XmlTransformation": "false",
        "XmlVariableSubstitution": "false",
        "JSONFiles": ""
      },
      "task": {
        "id": "1b467810-6725-4b6d-accd-886174c09bba",
        "versionSpec": "0.*",
        "definitionType": "task"
      }
    }
  ],
  "runsOn": [
    "DeploymentGroup"
  ],
  "revision": 4,
  "createdBy": {
    "displayName": "Ewen, Ben",
    "id": "33d513c5-b47f-494c-b9b6-5beaf25f5b95",
    "uniqueName": "NEXT-PLC\\BEWEN"
  },
  "createdOn": "2020-08-03T11:24:05.273Z",
  "modifiedBy": {
    "displayName": "Ewen, Ben",
    "id": "33d513c5-b47f-494c-b9b6-5beaf25f5b95",
    "uniqueName": "NEXT-PLC\\BEWEN"
  },
  "modifiedOn": "2020-09-01T07:22:30.887Z",
  "comment": "",
  "id": "6c2f1d8b-b06f-4f58-a9a1-e69a145a0412",
  "name": "Deploy to IIS (.NET Framework) - Anonymous Authentication - ApplicationPoolIdentity Credential",
  "version": {
    "major": 1,
    "minor": 0,
    "patch": 0,
    "isTest": false
  },
  "iconUrl": "/_static/tfs/Dev17.M153.3/_content/icon-meta-task.png",
  "friendlyName": "Deploy to IIS (.NET Framework) - Anonymous Authentication - ApplicationPoolIdentity Credential",
  "description": "This task group will create the IIS Virtual Application, and deploy the specified web package to it.",
  "category": "Deploy",
  "definitionType": "metaTask",
  "author": "Ewen, Ben",
  "demands": [],
  "groups": [],
  "inputs": [
    {
      "aliases": [],
      "options": {},
      "properties": {},
      "name": "AppPoolName",
      "label": "AppPoolName",
      "defaultValue": "$(AppPoolName)",
      "required": true,
      "type": "string",
      "helpMarkDown": "Provide the name of the IIS application pool to create or update.",
      "groupName": ""
    },
    {
      "aliases": [],
      "options": {},
      "properties": {},
      "name": "Hostname",
      "label": "Hostname",
      "defaultValue": "$(Hostname)",
      "required": true,
      "type": "string",
      "helpMarkDown": "",
      "groupName": ""
    },
    {
      "aliases": [],
      "options": {},
      "properties": {},
      "name": "IPAddress",
      "label": "IPAddress",
      "defaultValue": "$(IPAddress)",
      "required": true,
      "type": "string",
      "helpMarkDown": "",
      "groupName": ""
    },
    {
      "aliases": [],
      "options": {},
      "properties": {},
      "name": "Port",
      "label": "Port",
      "defaultValue": "$(Port)",
      "required": true,
      "type": "string",
      "helpMarkDown": "",
      "groupName": ""
    },
    {
      "aliases": [],
      "options": {},
      "properties": {},
      "name": "VirtualApplication",
      "label": "VirtualApplication",
      "defaultValue": "$(VirtualApplication)",
      "required": true,
      "type": "string",
      "helpMarkDown": "",
      "groupName": ""
    },
    {
      "aliases": [],
      "options": {},
      "properties": {},
      "name": "WebPackage",
      "label": "WebPackage",
      "defaultValue": "$(WebPackage)",
      "required": true,
      "type": "string",
      "helpMarkDown": "",
      "groupName": ""
    },
    {
      "aliases": [],
      "options": {},
      "properties": {},
      "name": "WebsiteName",
      "label": "WebsiteName",
      "defaultValue": "$(WebsiteName)",
      "required": true,
      "type": "string",
      "helpMarkDown": "Provide the name of the parent Website under which the application will be created or updated.",
      "groupName": ""
    },
    {
      "name": "Environment",
      "label": "Environment",
      "defaultValue": "$(Environment)",
      "required": true,
      "type": "string",
      "helpMarkDown": "The name of the environment, e.g. DEV, UAT, QA"
    },
    {
      "aliases": [],
      "options": {},
      "properties": {},
      "name": "WebsitePhysicalPath",
      "label": "WebsitePhysicalPath",
      "defaultValue": "$(WebsitePhysicalPath)",
      "required": true,
      "type": "string",
      "helpMarkDown": "",
      "groupName": ""
    },
    {
      "aliases": [],
      "options": {},
      "properties": {},
      "name": "WorkerProcesses",
      "label": "WorkerProcesses",
      "defaultValue": "$(WorkerProcesses)",
      "required": true,
      "type": "string",
      "helpMarkDown": "",
      "groupName": ""
    }
  ],
  "satisfies": [],
  "sourceDefinitions": [],
  "dataSourceBindings": [],
  "instanceNameFormat": "Task group: Deploy to IIS (.NET Framework) - Anonymous Authentication - ApplicationPoolIdentity Credential $(AppPoolName)",
  "preJobExecution": {},
  "execution": {},
  "postJobExecution": {}
}